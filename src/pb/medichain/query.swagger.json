{
  "swagger": "2.0",
  "info": {
    "title": "medichain/query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/sota/medichain/medichain/checkSharing": {
      "get": {
        "summary": "Queries a list of checkSharing items.",
        "operationId": "Query_CheckSharing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryCheckSharingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewerId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/service": {
      "get": {
        "summary": "Queries a list of service items.",
        "operationId": "Query_ServiceAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryAllServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/service/{index}": {
      "get": {
        "summary": "Queries a service by index.",
        "operationId": "Query_Service",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryGetServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/serviceUser": {
      "get": {
        "summary": "Queries a list of serviceUser items.",
        "operationId": "Query_ServiceUserAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryAllServiceUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/serviceUser/{index}": {
      "get": {
        "summary": "Queries a serviceUser by index.",
        "operationId": "Query_ServiceUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryGetServiceUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/sharing": {
      "get": {
        "summary": "Queries a list of sharing items.",
        "operationId": "Query_SharingAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryAllSharingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/sharing/{index}": {
      "get": {
        "summary": "Queries a sharing by index.",
        "operationId": "Query_Sharing",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryGetSharingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/user": {
      "get": {
        "summary": "Queries a list of user items.",
        "operationId": "Query_UserAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryAllUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/sota/medichain/medichain/user/{index}": {
      "get": {
        "summary": "Queries a user by index.",
        "operationId": "Query_User",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/medichainQueryGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "medichainQueryAllServiceResponse": {
      "type": "object",
      "properties": {
        "Service": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/medichainService"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse"
        }
      }
    },
    "medichainQueryAllServiceUserResponse": {
      "type": "object",
      "properties": {
        "ServiceUser": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/medichainServiceUser"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse"
        }
      }
    },
    "medichainQueryAllSharingResponse": {
      "type": "object",
      "properties": {
        "Sharing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/medichainSharing"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse"
        }
      }
    },
    "medichainQueryAllUserResponse": {
      "type": "object",
      "properties": {
        "User": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/medichainUser"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse"
        }
      }
    },
    "medichainQueryCheckSharingResponse": {
      "type": "object",
      "properties": {
        "Sharing": {
          "$ref": "#/definitions/medichainSharing"
        },
        "Owner": {
          "$ref": "#/definitions/medichainServiceUser"
        }
      }
    },
    "medichainQueryGetServiceResponse": {
      "type": "object",
      "properties": {
        "Service": {
          "$ref": "#/definitions/medichainService"
        }
      }
    },
    "medichainQueryGetServiceUserResponse": {
      "type": "object",
      "properties": {
        "ServiceUser": {
          "$ref": "#/definitions/medichainServiceUser"
        }
      }
    },
    "medichainQueryGetSharingResponse": {
      "type": "object",
      "properties": {
        "Sharing": {
          "$ref": "#/definitions/medichainSharing"
        }
      }
    },
    "medichainQueryGetUserResponse": {
      "type": "object",
      "properties": {
        "User": {
          "$ref": "#/definitions/medichainUser"
        }
      }
    },
    "medichainService": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "class": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "medichainServiceUser": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "serviceUserId": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "medichainSharing": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "viewerId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "medichainUser": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "pubKey": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "countTotal": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "v1beta1PageResponse": {
      "type": "object",
      "properties": {
        "nextKey": {
          "type": "string",
          "format": "byte",
          "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently"
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    }
  }
}
